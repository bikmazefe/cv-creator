[{"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/App.js":"1","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/GeneralInfo.js":"2","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/index.js":"3","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/EducationFields.js":"4","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/JobFields.js":"5","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/EducationExperience.js":"6","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/JobExperience.js":"7"},{"size":458,"mtime":1609585474011,"results":"8","hashOfConfig":"9"},{"size":2730,"mtime":1609522687189,"results":"10","hashOfConfig":"9"},{"size":411,"mtime":1609266317353,"results":"11","hashOfConfig":"9"},{"size":3926,"mtime":1609583233158,"results":"12","hashOfConfig":"9"},{"size":4568,"mtime":1609525640334,"results":"13","hashOfConfig":"9"},{"size":3842,"mtime":1609582911346,"results":"14","hashOfConfig":"9"},{"size":4425,"mtime":1609583615827,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ayj1n4",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/App.js",[],"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/GeneralInfo.js",["34"],"import React, { Component } from 'react';\nimport editImage from '../styles/edit.svg'\n\n\nclass GeneralInfo extends Component {\n    constructor(){\n        super()\n\n        this.state = {\n            info: {\n                name: \"\",\n                email: \"\",\n                phone: \"\"\n            },\n            editable: false\n        }\n        this.formView = this.formView.bind(this);\n        this.textView = this.textView.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            info: {\n                ...this.state.info,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.setState({editable: false})\n    }\n\n    formView(info) {\n        return <form className = \"form-view\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" \n                           value = {info.name} \n                           name = \"name\"\n                           onChange = {this.handleChange}\n                           />\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" \n                           value = {info.email} \n                           name = \"email\"\n                           onChange = {this.handleChange}\n                           />\n                    <label htmlFor=\"phone\">Phone</label>\n                    <input type=\"text\" \n                           value = {info.phone} \n                           name = \"phone\"\n                           onChange = {this.handleChange}\n                           />\n                    <input type=\"submit\" \n                           value=\"Save\"\n                           onClick= {this.handleSubmit}\n                           />\n               </form>\n    }\n\n    textView(info) {\n        return <div className = \"text-view\">\n                    <p>Name: <span>{info.name}</span></p>\n                    <p>Email: <span>{info.email}</span></p>\n                    <p>Phone: <span>{info.phone}</span></p>\n                    <img \n                        onClick = { () => this.setState({editable: true})}\n                        className = \"edit-button\"\n                        src = {editImage}/>\n\n               </div>\n    }\n\n\n\n\n\n    render() {\n        const { info } = this.state;\n        return (\n            <div className = \"general-info\">\n                <h2 className=\"section-title\">General Info</h2>\n                {this.state.editable ? this.formView(info) : this.textView(info)}\n            </div>\n        );\n    }\n}\n\nexport default GeneralInfo;",["35","36"],"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/index.js",[],"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/EducationFields.js",["37"],"/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/JobFields.js",["38"],"import React, { Component } from 'react';\nimport JobExperience from './JobExperience'\nimport plus from '../styles/plus.svg';\n\nclass JobFields extends Component {\n    constructor(){\n        super()\n\n        this.state = {\n            experiences: [],\n            formVisible: false,\n            newExperience: {\n                companyName: \"\",\n                positionTitle: \"\",\n                description: \"\",\n                startDate: \"\",\n                endDate: \"\"\n            }\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleEdit = this.handleEdit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.newForm = this.newForm.bind(this);\n    }\n\n    toggleForm() {\n        this.setState({formVisible: !this.state.formVisible})\n    }\n\n    newForm(){\n        return <form className = \"form-view\" onSubmit = {this.handleSubmit}>\n                  <label htmlFor=\"companyName\">Company:</label>\n                  <input type=\"text\" \n                         name = \"companyName\"\n                         value = {this.state.newExperience.companyName}\n                         onChange = {this.handleChange}\n                         />\n                  <label htmlFor=\"positionTitle\">Position Title:</label>\n                  <input type=\"text\" \n                         name = \"positionTitle\"\n                         value = {this.state.newExperience.positionTitle}\n                         onChange = {this.handleChange}\n                         />\n                  <label htmlFor=\"description\">Description</label>\n                  <textarea\n                         name = \"description\"\n                         value = {this.state.newExperience.dateOfStudy}\n                         onChange = {this.handleChange}\n                         />\n\n                <label htmlFor=\"description\">Start Date:</label>\n                <input type=\"text\" \n                         name = \"startDate\"\n                         value = {this.state.newExperience.startDate}\n                         onChange = {this.handleChange}\n                         />\n                <label htmlFor=\"description\">End Date:</label>\n                <input type=\"text\" \n                         name = \"endDate\"\n                         value = {this.state.newExperience.endDate}\n                         onChange = {this.handleChange}\n                         placeholder = \"Leave empty for ongoing jobs\"\n                         />\n                 <input type=\"submit\" value=\"Create\"/>\n               </form>\n    }\n\n    handleChange(e) {\n        this.setState({\n            newExperience: {\n                ...this.state.newExperience,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        const newExperience = {...this.state.newExperience}\n        this.setState({\n           experiences: [...this.state.experiences, newExperience]\n        })\n        this.toggleForm();\n        this.setState({\n            newExperience: {\n                companyName: \"\",\n                positionTitle: \"\",\n                description: \"\",\n                startDate: \"\",\n                endDate: \"\"\n            }\n        })\n    }\n\n    handleDelete(index) {\n        let experiencesCopy = [...this.state.experiences];\n        experiencesCopy.splice(index, 1);\n        this.setState({experiences: experiencesCopy})\n    }\n\n\n    handleEdit(index, item) {\n        let experiencesCopy = [...this.state.experiences];\n        experiencesCopy[index] = item;\n        this.setState({experiences: experiencesCopy});\n    }\n\n    render() {\n        return (\n            <div className = \"job-fields\">\n                <h2 className=\"section-title\">Jobs</h2>\n                <img \n                    onClick = {this.toggleForm} \n                    className = \"add-button\"\n                    src = {plus}\n                />\n\n                {this.state.formVisible ? this.newForm() : \"\"}\n                {this.state.experiences.map((item, index) => {\n                    return <JobExperience \n                                data = {item} \n                                index = {index}\n                                key = {index} \n                                handleEdit = {this.handleEdit}\n                                handleDelete = {this.handleDelete}/>\n                })}\n            </div>\n        );\n    }\n}\n\nexport default JobFields;","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/EducationExperience.js",["39","40"],"import React, { Component } from 'react';\nimport edit from '../styles/edit.svg'\nimport trash from '../styles/trash-2.svg'\nimport cancel from '../styles/x-circle.svg'\n\nclass EducationExperience extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            editable: false,\n            experience: {\n                schoolName: this.props.data.schoolName,\n                titleOfStudy: this.props.data.titleOfStudy,\n                dateOfStudy: this.props.data.dateOfStudy\n            }\n        }\n\n        this.toggleForm = this.toggleForm.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.formView = this.formView.bind(this);\n        this.textView = this.textView.bind(this);\n    }\n\n    toggleForm() {\n        this.setState({editable: !this.state.editable})\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let item = {...this.state.experience};\n        this.props.handleEdit(this.props.index, item);\n        this.toggleForm();\n    }\n\n    handleChange(e) {\n        this.setState({\n            experience: {\n                ...this.state.experience,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleCancel() {\n        this.toggleForm();\n        this.setState({\n            experience: {\n                schoolName: this.props.data.schoolName,\n                titleOfStudy: this.props.data.titleOfStudy,\n                dateOfStudy: this.props.data.dateOfStudy\n            }\n        })\n    }\n\n    formView(){\n        return <form className = \"form-view\"onSubmit = {this.handleSubmit}>\n                <label htmlFor=\"schoolName\">School Name:</label>\n                <input type=\"text\" \n                         name = \"schoolName\"\n                         value = {this.state.experience.schoolName}\n                         onChange = {this.handleChange}\n                         />\n                  <label htmlFor=\"titleOfStudy\">Title of Study:</label>\n                  <input type=\"text\" \n                         name = \"titleOfStudy\"\n                         value = {this.state.experience.titleOfStudy}\n                         onChange = {this.handleChange}\n                         />\n                <label htmlFor=\"dateOfStudy\">Date of Study:</label>\n                  <input type=\"text\" \n                         name = \"dateOfStudy\"\n                         value = {this.state.experience.dateOfStudy}\n                         onChange = {this.handleChange}\n                         />\n                 <input type=\"submit\" value=\"Save\"/>\n                 <button className = \"cancel\" onClick = {this.handleCancel}>\n                     <img src={cancel} alt=\"\"/>\n                     Cancel\n                </button>\n               </form>\n    }\n\n    textView(){\n\n        return <div className = \"education-experience\" >\n                    <h2>{this.state.experience.schoolName}</h2>\n                    <p>{this.state.experience.titleOfStudy} - {this.state.experience.dateOfStudy}</p>\n                    <img \n                        onClick = {this.toggleForm}\n                        src = {edit}\n                        className = \"edit-experience\"\n                    />\n\n                    <img \n                        onClick = {() => \n                            this.props.handleDelete(this.props.index)}\n                        src = {trash}\n                        className = \"delete-experience\"\n                    />\n                </div>\n    }\n\n\n    render() {\n        return (\n           <div className=\"\">\n               {this.state.editable ? this.formView() : this.textView()}\n           </div> \n        );\n    }\n}\n\nexport default EducationExperience;","/Users/efebikmaz/Desktop/Odin-New/the_odin_project/react/cv-creator/src/components/JobExperience.js",["41","42","43"],{"ruleId":"44","severity":1,"message":"45","line":71,"column":21,"nodeType":"46","endLine":74,"endColumn":44},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"44","severity":1,"message":"45","line":99,"column":17,"nodeType":"46","endLine":103,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":114,"column":17,"nodeType":"46","endLine":118,"endColumn":19},{"ruleId":"44","severity":1,"message":"45","line":91,"column":21,"nodeType":"46","endLine":95,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":97,"column":21,"nodeType":"46","endLine":102,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":4,"column":8,"nodeType":"53","messageId":"54","endLine":4,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":105,"column":21,"nodeType":"46","endLine":109,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":110,"column":21,"nodeType":"46","endLine":115,"endColumn":23},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'cancel' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]